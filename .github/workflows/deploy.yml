name: Deploy to Vercel and Render

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # 프론트엔드 배포 (Vercel)
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install || pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm --filter frontend test

      - name: Build
        run: pnpm --filter frontend build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # 백엔드 배포 (Render)
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm --filter backend test

      - name: Build
        run: pnpm --filter backend build

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json"

  # 테스트 (PR 시)
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        project: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm --filter ${{ matrix.project }} test

      - name: Build
        run: pnpm --filter ${{ matrix.project }} build
